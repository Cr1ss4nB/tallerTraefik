services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./auth:/auth:ro
    networks:
      - appnet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`ops.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.dashboard-stripprefix.stripprefix.prefixes=/dashboard"
      - "traefik.http.middlewares.dashboard-auth.basicauth.usersfile=/auth/.htpasswd"
      - "traefik.http.routers.traefik.middlewares=dashboard-stripprefix,dashboard-auth"
  neo4j:
    image: neo4j:5.20
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/test12345
    volumes:
      - neo4j_data:/data
      - ./imports:/imports
    networks:
      - appnet

  api:
    build: ./backend
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=test12345
      - EXPRESS_PORT=3000
    networks:
      - appnet
    depends_on:
      - neo4j
    deploy:
      replicas: 2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/v1"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=5"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=10"
      - "traefik.http.routers.api.middlewares=api-strip,api-ratelimit"
networks:
  appnet:

volumes:
  neo4j_data:
